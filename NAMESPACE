# Generated by roxygen2: do not edit by hand

S3method(barplot_cluster_abundance,Seurat)
S3method(barplot_cluster_abundance,SingleCellExperiment)
S3method(barplot_cluster_abundance,data.frame)
S3method(fetch_cellular_data,character)
S3method(fetch_cellular_data,h5Seurat)
S3method(heatmap_cross_sample,Seurat)
S3method(heatmap_cross_sample,SingleCellExperiment)
S3method(heatmap_cross_sample,array)
S3method(heatmap_cross_sample,list)
S3method(save_to_disk,Seurat)
export("%>%")
export(barplot_cluster_abundance)
export(calculateClusterProportion)
export(calculateClusterSize)
export(calculate_pseudo_bulk)
export(diff_state_apply)
export(diff_state_filter)
export(diff_state_format)
export(diff_state_pull)
export(diff_state_ranked_lfc)
export(diff_state_significant)
export(diff_state_significant_lfc)
export(diff_state_subset)
export(diff_state_summary)
export(expr_freq_filter)
export(fetch_cellular_data)
export(findDiffAbundantCells)
export(findDiffAbundantMarkers)
export(find_all_avg_expr_genes)
export(find_all_conserved_markers)
export(find_all_diff_expr_genes)
export(find_group_marker_genes)
export(from_list_to_upset)
export(genecount_diff_state)
export(generate_seurat_plots)
export(heatmap_cross_sample)
export(integrated_sample_analysis)
export(integration_analysis)
export(integration_anchorset)
export(intersection_counts)
export(key_mapping)
export(make_integrated_pseudo_bulk)
export(make_pseudo_bulk)
export(merge_sample)
export(perform_diff_gene)
export(perform_find_all_markers)
export(plotDACellLabel)
export(plotDACellScore)
export(plotDAOverlap)
export(plotDARandomPermutation)
export(plotDASampleLabel)
export(plotDASite)
export(plot_avg_expr_genes)
export(prepare_muscat_sce)
export(pseudobulk_diff_state)
export(read_molecules_csv)
export(read_mtx)
export(read_rhapsody_wta)
export(read_unfiltered_csv)
export(reassign_sample)
export(save_expression_matrix)
export(save_plot)
export(save_to_disk)
export(single_sample_analysis)
export(upset_dataframe)
export(upset_plot)
export(upset_updown_regulated)
export(volcano_diff_state)
importFrom(magrittr,"%>%")
